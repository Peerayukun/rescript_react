// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as Js_string from "rescript/lib/es6/js_string.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as StylesModuleCss from "../styles.module.css";

var styles = StylesModuleCss;

var arr = Belt_Array.range(0, 2);

var color = Belt_Array.map(Belt_Array.range(0, 9), (function (param) {
        return "rgb(" + String(Js_math.random_int(0, 255)) + ",\r\n        " + String(Js_math.random_int(0, 255)) + ",\r\n        " + String(Js_math.random_int(0, 255)) + ")";
      }));

var goal = [
  "012",
  "345",
  "678",
  "036",
  "147",
  "258",
  "048",
  "246"
];

function Grid(Props) {
  var setStatus = Props.setStatus;
  var match = React.useState(function () {
        return true;
      });
  var setTurnx = match[1];
  var turnx = match[0];
  var match$1 = React.useState(function () {
        return Belt_Array.make(9, "");
      });
  var setBoard = match$1[1];
  var board = match$1[0];
  return React.createElement("div", undefined, Belt_Array.map(arr, (function (y) {
                    return React.createElement("div", undefined, Belt_Array.map(arr, (function (x) {
                                      var idx = Math.imul(3, y) + x | 0;
                                      return React.createElement("input", {
                                                  className: styles.button,
                                                  style: {
                                                    backgroundColor: Belt_Array.getExn(color, idx)
                                                  },
                                                  disabled: Belt_Array.getExn(board, idx) !== "",
                                                  readOnly: true,
                                                  value: Belt_Array.getExn(board, idx),
                                                  onClick: (function (__x) {
                                                      __x.preventDefault();
                                                      Curry._1(setTurnx, (function (prev) {
                                                              return !prev;
                                                            }));
                                                      var newBoard = board.slice(0);
                                                      var disableAll = function (param) {
                                                        Belt_Array.forEachWithIndex(newBoard, (function (index, item) {
                                                                if (item === "") {
                                                                  return Belt_Array.setExn(newBoard, index, " ");
                                                                }
                                                                
                                                              }));
                                                      };
                                                      if (turnx) {
                                                        Belt_Array.setExn(newBoard, idx, "x");
                                                      } else {
                                                        Belt_Array.setExn(newBoard, idx, "o");
                                                      }
                                                      Belt_Array.forEachWithIndex(goal, (function (index, item) {
                                                              if (Js_string.includes(String(idx), item)) {
                                                                if (turnx) {
                                                                  return Belt_Array.setExn(goal, index, Js_string.replace(String(idx), "x", item));
                                                                } else {
                                                                  return Belt_Array.setExn(goal, index, Js_string.replace(String(idx), "o", item));
                                                                }
                                                              }
                                                              
                                                            }));
                                                      if (Belt_Array.some(goal, (function (item) {
                                                                return item === "xxx";
                                                              }))) {
                                                        Curry._1(setStatus, (function (param) {
                                                                return "X win";
                                                              }));
                                                        disableAll(undefined);
                                                      } else if (Belt_Array.some(goal, (function (item) {
                                                                return item === "ooo";
                                                              }))) {
                                                        Curry._1(setStatus, (function (param) {
                                                                return "O win";
                                                              }));
                                                        disableAll(undefined);
                                                      } else {
                                                        if (turnx) {
                                                          Curry._1(setStatus, (function (param) {
                                                                  return "Turn O";
                                                                }));
                                                        } else {
                                                          Curry._1(setStatus, (function (param) {
                                                                  return "Turn X";
                                                                }));
                                                        }
                                                        if (Belt_Array.every(newBoard, (function (item) {
                                                                  return item !== "";
                                                                }))) {
                                                          Curry._1(setStatus, (function (param) {
                                                                  return "Draw";
                                                                }));
                                                        }
                                                        
                                                      }
                                                      Curry._1(setBoard, (function (param) {
                                                              return newBoard;
                                                            }));
                                                    })
                                                });
                                    })));
                  })));
}

var make = Grid;

export {
  styles ,
  arr ,
  color ,
  goal ,
  make ,
}
/* styles Not a pure module */
